"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

import os
PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(PROJECT_DIR)
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6h-r_%p$5dx85dv@ezi0ozer6lf+e6-d&#107hpw_j2uf4ggdp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'channels',
    'snipet',
    'theme',
    'jazzmin',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # first place
    'allauth',  # after your modules declarations
    'rest_auth',
    'dj_rest_auth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'chatbot',
    'gym.apps.GymConfig',
    'ckeditor',
    'ckeditor_uploader',
    'tailwind',
    'crispy_forms',
    'crispy_tailwind',
    'django_icons',
    
]


CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"

CRISPY_TEMPLATE_PACK = "tailwind"
SITE_ID = 1

NPM_BIN_PATH = 'npm.cmd'
TAILWIND_APP_NAME = 'theme'
INTERNAL_IPS = [
    "127.0.0.1",
]


DJANGO_ALLOW_ASYNC_UNSAFE = True

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': '100%',
        'tabSpaces': 4,
    },
}

CKEDITOR_UPLOAD_PATH = "uploads/"

ckeditor__external_plugin_resources = [
    (
        "youtube",
        "/static/ckeditor/ckeditor/plugins/youtube/",
        "plugin.min.js",
    )
]


ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
LOGOUT_REDIRECT_URL ='/admin/'
LOGIN_REDIRECT_URL ='/admin/'



REST_USE_JWT = True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'OAUTH_PKCE_ENABLED': True,
        'APP': {
            'client_id': '140994517461-2n5kkr9ub64cj3b91kmtgckun4o2mdgp.apps.googleusercontent.com',
            'secret': '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',
            'key': 'AIzaSyC7MKTKV1TpFRecm8Rsh6ffWZW92jlHGDQ'
        }
    }
}


CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'CMS',
        'special': {
            'toolbar': 'Special',
            'toolbar_Special': [
                ['Bold', 'CodeSnippet', 'Youtube'],
            ],
            'extraPlugins': ["codesnippet", "Youtube"],
            'height': 400,
            'width': '100%',
            'allowedContent': True,
            'uiColor': '#f0f0f0',
            'autoGrow_maxHeight': 800,
            'autoGrow_minHeight': 400,
            'removePlugins': 'resize',
            'removeButtons': None,
        },
    },
}




MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, "templates")
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


ASGI_APPLICATION = 'core.asgi.application'
# WSGI_APPLICATION = 'core.wsgi.application'


CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

import sys

if 'test' in sys.argv:
        
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(PROJECT_DIR, "static")
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Define a session cookie name
SESSION_COOKIE_NAME = 'localhost'  # You can choose your own name

# Define the session cookie domain (e.g., 'localhost' for development)
SESSION_COOKIE_DOMAIN = 'localhost'  # Update this to your domain in a production environment

# Set the session age (timeout) in seconds
SESSION_COOKIE_AGE = 360000  # Set it to your desired session timeout

# Ensure the CSRF cookie is set to use the same domain
CSRF_COOKIE_DOMAIN = 'localhost'  # Update this to your domain in a production environment

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Add the actual origin of your frontend application
    "http://localhost:8080",  # Add the actual origin of your frontend application
    "http://192.168.0.104",  # Add the actual origin of your frontend application
    "http://192.168.0.104:8080",
    "http://192.168.0.109:8080",
    "http://192.168.0.105:8080",
]
CSRF_TRUSTED_ORIGINS = [
  'http://localhost:5173',  # Add the actual origin of your frontend application
  'http://localhost:8080',
  'http://192.168.0.109:8080',
  'http://192.168.0.105:8080',
  'http://192.168.0.104:8080',
]
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]
CORS_ALLOW_CREDENTIALS = True

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]


ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_EMAIL_REQUIRED = True

LOGIN_REDIRECT_URL = '/admin'


# Redirect to login page after logout
LOGOUT_REDIRECT_URL = '/admin'


SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = False  # Usually False for local development
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False



STRIPE_PUBLISHABLE_KEY = 'pk_test_51PTUSgP8ENJAFqxvHWzqkWiFqdoSfjnQAkjy4w1w4tqB7p4JI9wuVSyjuthax9mJ3bJ3KEcDnEzp5UfhJeD65flP00E4T2tCIN'
STRIPE_SECRET_KEY = 'sk_test_51QAD3j05xAWFmGaFNU4zRs7gSsDiP44nkltg7Rm5RlXrQc5yHOCvbIc8iUJji4RTntXy18BdBKwRCdJeKUr2Rttd00YX2WAxIV'


STRIPE_WEBHOOK_SECRET = 'whsec_1af4b595cabda43eb335055850038a3d2007165f8c6bf1fad81666b75045af89'

# STRIPE_SECRET_KEY = 'sk_test_51PTUSgP8ENJAFqxvTTv3fsF5gsxIEIbl520QEECWCvhMIYdbr20wTqaffE1FWAKg6ufvbQGERmeAmCC99uD18pUh00uA7dDMvs'

# Your domain
YOUR_DOMAIN = 'http://localhost:8000'  # Adjust port as per your Django development server

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'UTC'




WHATSAPP_ACCESS_TOKEN = 'EAAL5xJ4bub0BO09CBziFXb0pHYelcfmRl5tyQUBcBEZBvUhjSQwAQbBZC9liwliAQEEKqGBNiBZA6q5bQIODzSZCKdMjNZA7ZACpBEtTgLA5f7QFCuLoq4HIsWBMkKOXZCL16MSTdje1qEOnYWs9uENyGueKqc48r9V0PkHRzyi3h19DbpyHnZA3LJYq8473WyOS'
WHATSAPP_RECIPIENT_WAID = '1749794512'
WHATSAPP_PHONE_NUMBER_ID  = '378295675358231'
WHATSAPP_VERSION = 'v19.0'  # replace with the appropriate version




JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "SNAPAFIT Admin",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "SNAPAFIT",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "SNAPAFIT",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "images/icon.png",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "images/icon.png",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": "images/icon.png",

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

   

    # Welcome text on the login screen
    "welcome_sign": "Welcome to the SNAPAFIT",

    # Copyright on the footer
    "copyright": "SNAPAFIT",

    # The model admin to search from the search bar, search bar omitted if excluded
    # "search_model": "auth.User",

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": "fas fa-user text-blue",

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
 
    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)


    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": False,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],

    # Hide these models when generating side menu (e.g auth.user)
    # "hide_models": ['order.orderss','order.sticket','order.smst','store.categoryhome','store.req',],

    # # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    # "order_with_respect_to": [
        
    #     ],

    # Custom links to append to app groups, keyed on app name


    # Order the auth app before the books app, other apps will be alphabetically placed after these
    # "order_with_respect_to": ["auth", "order", "store", 
    #     "snipet.shipformedes","snipet.shipformenote",
    #     "snipet.payformenote","snipet.reqsnote","snipet.Home_Banneer","snipet.terms_condition_page","snipet.forbidenitempagen_page",
    #     "snipet.Privacy_Policy_page","snipet.Shipping_refund_Pollicy_page","snipet.Home_Faq","snipet.Faq_page","snipet.shipformecharge","snipet.shipformemesssages",],

    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "socialaccount.socialaccount": "fas fa fa-users ",
        "socialaccount.socialtoken": "fas fa-user-plus ",
        "socialaccount.socialapp": "fas fa-user-plus ",
        "gym.affiliate": "fas fa-assistive-listening-systems",
        "gym.GymPackage": "fas fa-shopping-bag",
        "gym.Order": "fas fa-shopping-bag",
        "gym.UserAssessment": "fas fa-user",
        "store.Product": "fas fa fa-gift",
        "order.wallet": "fas fa-folder ",
        "account.EmailAddress": "fas fa fa-envelope ",
        "sites.site": "fas fa fa-globe ",
        "store.shipping": "fas fa fa-truck ",
        "store.payforme": "fas fa fa-address-card",
        "taggit.tag": "fas fa fa-tags ",
        "snipet.shipformedes": "fas fa fa-leaf",
        "snipet.shipformenote": "fas fa fa-leaf",
        "snipet.payformenote": "fas fa fa-leaf",
        "snipet.Home_Banneer": "fas fa fa-leaf",
        "snipet.terms_condition_page": "fas fa fa-leaf",
        "snipet.forbidenitempagen_page": "fas fa fa-leaf",
        "snipet.Privacy_Policy_page": "fas fa fa-leaf",
        "snipet.Shipping_refund_Pollicy_page": "fas fa fa-leaf",
        "snipet.Home_Faq": "fas fa fa-leaf",
        "snipet.Faq_page": "fas fa fa-leaf",
        "snipet.shipformecharge": "fas fa fa-leaf",
        "snipet.shipformemesssages": "fas fa fa-leaf",
        "snipet.shipformemesssages": "fas fa fa-leaf",
        "snipet.reqsnote": "fas fa fa-leaf",
        
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": "css/admin/custom.css",
    "custom_js": "js/admin/custom.js",
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},

}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-navy",
    "accent": "accent-teal",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-orange",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "darkly",
    "dark_mode_theme": "darkly",
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": True
}



